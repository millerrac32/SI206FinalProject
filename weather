import requests
import sqlite3
import matplotlib.pyplot as plt


DB_NAME = "open_meteo.db"


def create_tables(conn):
   cur = conn.cursor()
   cur.execute("""
   CREATE TABLE IF NOT EXISTS locations (
       location_id INTEGER PRIMARY KEY AUTOINCREMENT,
       city_name TEXT,
       latitude REAL,
       longitude REAL,
       UNIQUE(latitude, longitude)
   );
   """)
   cur.execute("""
   CREATE TABLE IF NOT EXISTS hourly_weather (
       weather_id INTEGER PRIMARY KEY AUTOINCREMENT,
       location_id INTEGER,
       time_utc TEXT,
       temperature_2m REAL,
       precipitation REAL,
       FOREIGN KEY(location_id) REFERENCES locations(location_id),
       UNIQUE(location_id, time_utc)
   );
   """)
   conn.commit()

def get_or_create_location(conn, city_name, latitude, longitude):
   cur = conn.cursor()
   cur.execute("""
       SELECT location_id
       FROM locations
       WHERE latitude = ? AND longitude = ?
   """, (latitude, longitude))
   row = cur.fetchone()
   if row:
       return row[0]
   cur.execute("""
       INSERT INTO locations (city_name, latitude, longitude)
       VALUES (?, ?, ?)
   """, (city_name, latitude, longitude))
   conn.commit()
   return cur.lastrowid

def fetch_open_meteo_data(latitude, longitude, start_date, end_date):
   base_url = "https://api.open-meteo.com/v1/forecast"
   params = {
       "latitude": latitude,
       "longitude": longitude,
       "start_date": start_date,
       "end_date": end_date,
       "hourly": "temperature_2m,precipitation",
       "timezone": "UTC"
   }
   response = requests.get(base_url, params=params)
   response.raise_for_status()
   data = response.json()
   return data